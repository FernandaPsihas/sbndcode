# A script to run an analysis module: PandoraNuMuRecoAna

#include "simulationservices_sbnd.fcl"
#include "messages_sbnd.fcl"
#include "backtrackerservice.fcl"
#include "particleinventoryservice.fcl"

process_name: PandoraNuMuRecoAna

services:
{
  # Load the service that manages root files for histograms.
  TFileService:           { fileName: "pandoranumurecoana.root" }
  ParticleInventoryService: @local::standard_particleinventoryservice
  BackTrackerService: @local::standard_backtrackerservice

  # This constrols the display in the output of how long each job step takes for each event. 
  TimeTracker:            {}

  # This parameter controls the level of descriptive output from various LArSoft modules.
  message:                @local::sbnd_message_services_interactive_debug

  # This following line defines many default LArSoft resources for this job.
  @table::sbnd_simulation_services

} # services

# The 'source' section tells the script to expect an input file with art::Event records.
source:
{
  module_type: RootInput

  # Number of events to analyze; "-1" means all of the events in the input
  # file. You can override this value with the "-n" option on the command line. 
  maxEvents:  -1 

}

# This is empty, because we're not writing an output file with art::Event objects.
outputs:{}

# The 'physics' section defines and configures some modules to do work on each event.
physics:
{
  # Define the variables we'll need to read for this analysis program.
  analyzers:
  {
    # This name defines a job step below, and will appear as a directory  in the output histogram file. 
    PandoraNuMuRecoAna: 
    {
      # The "module_type" tells us which module to run. The name here
      # must match the name supplied to DEFINE_ART_MODULE
      module_type:     "sbndcode/Selection/PandoraNuMuRecoAna"

      # The input parameters
      inputs: {
        SimModuleLabel:      "largeant"        # Simulation producer module label
        TpcTrackModuleLabel: "pandoraTrack" # TPC track producer module label
        HitModuleLabel:      "gaushit" # TPC track producer module label
        ShowerModuleLabel:   "pandoraShower" 
        PandoraLabel:        "pandora"
        Verbose:             true             # Print extra information about what's going on
      }
      fitter: {
        pIdHypothesis: 13
        minNumSegments: 3
        segmentLength: 14.0
        minHitsPerSegment: 2
        nElossSteps: 10
        eLossMode: 0
        pMin: 0.01
        pMax: 7.50
        pStep: 0.01
        angResol: 3.0
      }
    }
  }

  # Schedule job step(s) for execution by defining the analysis module for this job.
  analysis: [ PandoraNuMuRecoAna ]

  # "end_paths" is a keyword and contains the modules that do not modify the art::Event;
  # i.e., analyzers and output streams.
  end_paths: [ analysis ]

}
