#include "geometry_lariat.fcl"                                   
#include "hitfindermodulesVST.fcl"
#include "channelstatus_sbnd.fcl"
#include "vst_channel_map.fcl"  

physics:
{
  producers:
  {
    daq:
    {
      wait_time: 0
      module_type: DaqDecoder
      produce_header: true
      validate_header: true
      calc_checksum: true 
      baseline_calc: false
    }
    
     rawhit:             @local::standard_fasthitfinderVST
  }

  analyzers:
  {
    VSTAnalysis:
    {
      module_type: VSTAnalysis
      producer_name: daq
      n_headers: 10

      threshold_calc: 3
      threshold_sigma: 5
      noise_range_sampling: 1
      use_planes: false
      verbose: false
      baseline_calc: 2
      refine_baseline: true

      fft_per_channel: true
      fill_waveforms: true
      timing: false
      sum_waveforms: true
      fft_summed_waveforms: true
      verbose: false
      
      HitsModuleLabel: "rawhit"
      UseRawHits: false
      PedestalSubtracted: true
      CollectionNeg: true
      UseNevisClock: true
      DoPurityAna: true

    }
  }

  my_producer_modules: [daq,rawhit]

  outstream: [out1]
  analyze: [VSTAnalysis]
  end_paths: [outstream, analyze]
}

outputs:
{
  out1:
  {
    module_type: RootOutput
    fileName: "decoder_out.root"
  }
}

services:
{
  TFileService: { fileName: "out.root"}
  VSTChannelMap: @local::channel_map_VST
  //message: @local::standard_debug
} 

source:
{
  module_type: RootInput
  fileNames: ["/sbnd/data/users/gputnam/VST/nevis_test_stand_data/integration/fragments.root"]
}


physics.producers.rawhit.DigitModuleLabel:    "daq"
physics.producers.rawhit.MinSigInd:           13
physics.producers.rawhit.MinSigCol:           13
physics.producers.rawhit.UncompressWithPed:         false



process_name: SIMPLEPIPELINE

