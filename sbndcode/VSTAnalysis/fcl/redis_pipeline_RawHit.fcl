#include "hitfindermodulesVST.fcl"
#include "channelstatus_sbnd.fcl"

physics:
{
  producers:
  {
    daq:
    {
      module_type: DaqDecoder
      wait_time: 1
      produce_header: true
    }
    
     rawhit:             @local::standard_fasthitfinderVST
	
  }

  analyzers:
  {
    OnlineAnalysis:
    {
      module_type: OnlineAnalysis
      producer_name: daq
      snapshot_time: -1
      stream_take: [1, 10]
      stream_expire: [1000, 10000]
      n_headers: 1
      threshold_calc: 3
      threshold_sigma: 5
      noise_range_sampling: 1
      n_smoothing_samples: 1
      n_above_threshold: 2
      use_planes: false
      baseline_calc: 2

      HitsModuleLabel: "rawhit"
      UseRawHits: false

      sum_waveforms: false
      fill_waveforms: false
      fft_per_channel: false
      timing: false
    }
  }

  my_producer_modules: [daq,raw]

  outstream: [out1]
  analyze: [OnlineAnalysis]
  end_paths: [analyze]
}

outputs:
{
  out1:
  {
    module_type: RootOutput
    fileName: "pipeline_out.root"
    compressionLevel: 0
  }
}

source:
{
  module_type: RootInput
  fileNames: ["/sbnd/data/users/gputnam/nevis_fake_data/filedata.root"]
}

services:
{
	ChannelStatusService:   @local::vst_channelstatus
}

physics.producers.rawhit.DigitModuleLabel:        "daq"
physics.producers.rawhit.MinSigInd:                 13	#Change to 5 sigma of the RMS of the Noise.
physics.producers.rawhit.MinSigCol:                 13
physics.producers.rawhit.UncompressWithPed:         false

process_name: REDISPIPELINE

