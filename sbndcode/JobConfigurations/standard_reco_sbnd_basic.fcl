#
# File:    standard_reco_sbnd_basic.fcl
# Purpose: run basic reconstruction with SBND detector
# Version: 1.2
#
# Changes:
# 20160621 (petrillo@fnal.gov) [v1.1]
#   updated with sbndcode services
# 20160929 (petrillo@fnal.gov) [v1.2]
#   replace tracker from TrackKalman3D to PMTrackMaker
#

#
# service configuration
#

#include "services_sbnd.fcl"
#include "messages_sbnd.fcl"
#include "sam_sbnd.fcl"
#include "larfft_sbnd.fcl"
#include "signalservices_sbnd.fcl"

#
# module configuration
#

#include "caldata_sbnd.fcl"
#include "hitfindermodules_sbnd.fcl"
#include "cluster_sbnd.fcl"
#include "trackfindermodules_sbnd.fcl"
#include "calorimetry_sbnd.fcl"
#include "showerfindermodules.fcl"
#include "databaseutil_sbnd.fcl"
##include "opticaldetectormodules_sbnd.fcl"
#include "vertexfindermodules.fcl"
##include "pandoramodules.fcl"
##include "triggeralgo_service.fcl"
##include "photpropservices_sbnd.fcl"


process_name: Reco

services:
{
  # Load the service that manages root files for histograms.
  TFileService:              { fileName: "reco_hist.root" }
  message:                   @local::sbnd_message_services_prod # from messages_sbnd.fcl
  FileCatalogMetadata:       @local::sbnd_file_catalog_mc       # from sam_sbnd.fcl
                             @table::sbnd_services              # from services_sbnd.fcl
                             @table::sbnd_random_services       # from services_sbnd.fcl; required by fuzzyCluster
  LArFFT:                    @local::sbnd_larfft
  SignalShapingServiceSBND: @local::sbnd_signalshapingservice  # from signalservices_sbnd.fcl
}

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
  ### random number saver
  rns:                 { module_type: RandomNumberSaver }

  ### flash finders
 # opflash:             @local::sbnd_opflash

  ### calwire producers
  caldata:             @local::sbnd_calwire

  ### hit-finder producers
  gaushit:             @local::sbnd_gaushitfinder
#  rffhit:              @local::sbnd_rffhitfinder

  ### corner-finder
  corner:              @local::standard_cornerfinder    

  ### cluster-finder producers
  fuzzycluster:        @local::sbnd_fuzzycluster
  linecluster:         @local::sbnd_linecluster
  cccluster:           @local::sbnd_clustercrawler
  spacepts:            @local::sbnd_spacepts

  ### pandora
 # pandora:             @local::standard_pandora
  
  ### track-finder producers
  trackkalmanhit:      @local::sbnd_track3Dkalmanhit
  spacepointfinder:    @local::sbnd_spacepoint_finder
  trackkalsps:         @local::sbnd_kalman
  
  pmalgtrackmaker:     @local::sbnd_pmalgtrackmaker
    
  ### shower-finder producers

  ### vertex-finder producers

  ### calorimetry producers
  trackkalmanhitcalo:  @local::sbnd_calomc
  pmatrackcalo:        @local::sbnd_calomc

  ### flash-track matching
 # beamflashcompat:     @local::standard_beamflashcompat
 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 reco: [ rns
   #     , opflash
         , caldata 
         , gaushit
   #      , rffhit
   #      , corner
   #      , fuzzycluster
         , linecluster
   #      , cccluster
   #      , spacepts,
   #      , pandora,
   #      , trackkalmanhit, spacepointfinder, trackkalsps,
         , pmalgtrackmaker
   #      , trackkalmanhitcalo,
         , pmatrackcalo
   #      , beamflashcompat
 ]

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [reco] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_%p-%tc.root"
   dataTier:    "reconstructed"
   compressionLevel: 1
 }
}


### Here, we overwrite ALL module labels with the ones defined above.

#physics.producers.opflash.InputModule:                          "optreadout"
#physics.producers.opflash.GenModule:                            "generator"

physics.producers.caldata.DigitModuleLabel:                     "daq"

physics.producers.gaushit.CalDataModuleLabel:                   "caldata"
#physics.producers.rffhit.CalDataModuleLabel:                    "caldata"

#physics.producers.corner.CornerAlgParamSet.RawDataModuleLabel:  "daq"
#physics.producers.corner.CornerAlgParamSet.CalDataModuleLabel:  "caldata"
#
physics.producers.linecluster.HitFinderModuleLabel:              "gaushit"

#physics.producers.fuzzycluster.HitsModuleLabel:                 "gaushit"
#physics.producers.fuzzycluster.CalDataModuleLabel:              "caldata"

#physics.producers.cccluster.CalDataModuleLabel:                 "caldata"
#physics.producers.cccluster.CCHitFinderAlg.CalDataModuleLabel:  "caldata"

#physics.producers.pandora.GeantModuleLabel:                     "largeant"
#physics.producers.pandora.HitFinderModuleLabel:                 "gaushit"

#physics.producers.trackkalmanhit.HitModuleLabel:		"gaushit"
#physics.producers.trackkalmanhit.ClusterModuleLabel:		"fuzzycluster"
#physics.producers.trackkalmanhit.ClusterModuleLabel:		"cccluster"

physics.producers.pmalgtrackmaker.HitModuleLabel:               "linecluster"
physics.producers.pmalgtrackmaker.ClusterModuleLabel:           "linecluster"
# physics.producers.pmalgtrackmaker.EmClusterModuleLabel:         "" # future
physics.producers.pmalgtrackmaker.T0ModuleLabel:                ""


#physics.producers.spacepointfinder.ClusterModuleLabel:          "fuzzycluster"
#physics.producers.spacepointfinder.ClusterModuleLabel:          "cccluster"

#physics.producers.trackkalmanhitcalo.TrackModuleLabel:          "trackkalmanhit"
#physics.producers.trackkalmanhitcalo.SpacePointModuleLabel:     "trackkalmanhit"

physics.producers.pmatrackcalo.TrackModuleLabel:                "pmalgtrackmaker"
physics.producers.pmatrackcalo.SpacePointModuleLabel:           "pmalgtrackmaker"

#physics.producers.beamflashcompat.TrackModuleLabel:             "beziertracker"
#physics.producers.beamflashcompat.FlashModuleLabel:             "opflash"



