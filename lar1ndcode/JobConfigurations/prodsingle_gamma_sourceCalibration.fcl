#include "services_lar1nd.fcl"
#include "singles_lar1nd.fcl"
#include "largeantmodules_lar1nd.fcl"
#include "detsimmodules_lar1nd.fcl"
#include "caldata_lar1nd.fcl"
#include "mcreco.fcl"
#include "hitfindermodules_lar1nd.fcl"
#include "clustermodules.fcl"
#include "trackfindermodules.fcl"
#include "analysistreemodule.fcl"
#include "channelstatus_lar1nd.fcl"

process_name: SinglesGen

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "histo_gamma_5MeV_30cm_nocylinder.root" }
  Timing:       {}
  RandomNumberGenerator: {} #ART native random number generator
  user:         @local::lar1nd_simulation_services
  #@table:: @local::lar1nd_simulation_services
  #SeedService: @local::random_seedservice
  ChannelStatusService:           @local::lar1nd_channelstatus
}


#Start each new event with an empty event.
source:
{
  module_type: EmptyEvent
  maxEvents:   200        # Number of events to create
  firstRun:    1           # Run number to use for this file
  firstEvent:  1           # number of first event in the file
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   generator: 	@local::lar1nd_singlep	  
   largeant:  	@local::lar1nd_largeant	  
   daq:       	@local::lar1nd_simwire
   mcreco: 	@local::standard_mcreco
   caldata:     @local::lar1nd_calwire   
   gaushit:     @local::gaus_hitfinder   
   linecluster: @local::standard_linecluster  
   pmtrack:     @local::standard_pmalgtrackmaker
   rns:       { module_type: "RandomNumberSaver" }
 }
 
 
 filters:  
    {
    
    
    } 
 analyzers:
    {
    analysistree:  @local::lar1nd_sourcecalibana
    
    } 

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 simulate: [ generator, largeant, daq, mcreco, caldata, gaushit, linecluster, pmtrack, rns ] 
 ana:  [ analysistree ]
 
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1, ana]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "GammaProd_5MeV_30cm_nocylinder.root" #default file name, can override from command line with -o or --output
 }
}

### Simulation parameters
physics.producers.generator.PDG: [ 22 ]
physics.producers.generator.P0: [ 1.0 ]
physics.producers.generator.SigmaP: [ 0.0 ]
physics.producers.generator.PDist: 1
physics.producers.generator.PosDist: 0
physics.producers.generator.X0: [ 100.0 ]
physics.producers.generator.Y0: [ 0.0 ]
physics.producers.generator.Z0: [ 15. ]
physics.producers.generator.SigmaX: [ 0. ]
physics.producers.generator.SigmzY: [ 0. ]
physics.producers.generator.SigmaZ: [ 0. ]
physics.producers.generator.Theta0XZ: [ 0. ]
physics.producers.generator.Theta0YZ: [ 0. ]
physics.producers.generator.SigmaThetaXZ: [ 0. ]
physics.producers.generator.SigmaThetaYZ: [ 0. ]
physics.producers.generator.AngleDist: 0
physics.producers.generator.PosDist: 1
services.user.LArG4Parameters.KeepEMShowerDaughters: true

### CalWire Parameters ###
services.user.SignalShapingServiceT1053.ASICGainInMVPerFC: 14
physics.producers.caldata.DigitModuleLabel:                     "daq"

### Hit Finder Parameters ###
physics.producers.gaushit.CalDataModuleLabel:                   "caldata"
physics.producers.gaushit.Chi2NDFRetry:                          1000.
physics.producers.gaushit.IndMinWidth: 1.0
physics.producers.gaushit.ColMinWidth: 1.0
physics.producers.gaushit.MinSig: [ 6.0, 6.0, 11.0 ]
physics.producers.gaushit.InitWidth: [ 6.0, 6.0, 7.8 ]
physics.producers.gaushit.MinWidth:  [ 4.0, 4.0, 6.0 ]
physics.producers.gaushit.AreaNorms: [ 13.25, 13.25, 26.31 ]

physics.producers.linecluster.HitFinderModuleLabel: "gaushit"
physics.producers.linecluster.ClusterCrawlerAlg.NumPass: 3      # Number of passes through the hit collection
physics.producers.linecluster.ClusterCrawlerAlg.MaxHitsFit: [100, 10, 3] # Max number of hits fit in each pass
physics.producers.linecluster.ClusterCrawlerAlg.MinHits:    [ 80,  8, 3] # Minimum number of hits required
physics.producers.linecluster.ClusterCrawlerAlg.MinWirAfterSkip: [ 10,  3, 2] # Min number of hits after skipping a gap
physics.producers.linecluster.ClusterCrawlerAlg.NHitsAve:    [ 10,  6, 2] # Number of hits for finding average hit charge
physics.producers.linecluster.ClusterCrawlerAlg.ChgCut:     [2, 4, 8] # Max fractional charge allowed for adding hits
physics.producers.linecluster.ClusterCrawlerAlg.ChiCut:   [4, 8, 10]  # Max fit chisq for clusters
physics.producers.linecluster.ClusterCrawlerAlg.MaxWirSkip:   [20, 4, 0] # Max number of wires to skip while crawling
physics.producers.linecluster.ClusterCrawlerAlg.KinkChiRat: [1.2, 1.2, 2] # (1st cut) Max fit chisq ratio for identifying a kink
###############################################################################
#physics.producers.linecluster.ClusterCrawlerAlg.KinkAngCut: [0.2, 0.4, 1.5] # (2nd cut) Max kink angle
physics.producers.linecluster.ClusterCrawlerAlg.KinkAngCut: [0.2, 0.2, 0.3] # (2nd cut) Max kink angle
##############################################################################
physics.producers.linecluster.ClusterCrawlerAlg.DoMerge: [false, true, true] # Merge clusters on pass?
physics.producers.linecluster.ClusterCrawlerAlg.TimeDelta: [8, 8, 20] # mMx tick difference at intersection for merging clusters
physics.producers.linecluster.ClusterCrawlerAlg.MergeChgCut: [0.8, 0.8, 0.8] # Max charge ratio difference for merging clusters
physics.producers.linecluster.ClusterCrawlerAlg.FindVertices: [true, true, true] # Find vertices on each pass?
physics.producers.linecluster.ClusterCrawlerAlg.LACrawl: [true, true, true] # Crawl Large Angle clusters on each pass?
physics.producers.linecluster.ClusterCrawlerAlg.LAClusAngleCut: 45  # Angle (degrees) for using Large Angle crawling code
physics.producers.linecluster.ClusterCrawlerAlg.LAClusMaxHitsFit: 4 # Max number of hits
physics.producers.linecluster.ClusterCrawlerAlg.MinHitFrac: 0.6 # Discard clusters with fraction of (numHits/numWires) < value
physics.producers.linecluster.ClusterCrawlerAlg.MinAmp: [5, 5, 5] # Min signal amplitude for merging clusters and cluster-vtx associations
physics.producers.linecluster.ClusterCrawlerAlg.HitMergeChiCut: 2.5 # Max hit separation chisq to make hits available for merging
physics.producers.linecluster.ClusterCrawlerAlg.MergeOverlapAngCut: 0.1 # max angle difference (radians) for merging overlap clusters
physics.producers.linecluster.ClusterCrawlerAlg.ChkClusterDS: true # Extend clusters DownStream after creating them?
physics.producers.linecluster.ClusterCrawlerAlg.VtxClusterSplit: true # Split clusters that cross a 2D vertex?
physics.producers.linecluster.ClusterCrawlerAlg.FindStarVertices: true # Find 2D vertices with a star topology
physics.producers.linecluster.ClusterCrawlerAlg.FindHammerClusters: true # Find 2D vertices with a hammer topology
physics.producers.linecluster.ClusterCrawlerAlg.FindVLAClusters: false # Find Very Large Angle clusters
physics.producers.linecluster.ClusterCrawlerAlg.RefineVertexClusters: false # Refine vertices and clusters after creating them
#############################################################
physics.producers.linecluster.ClusterCrawlerAlg.HitErrFac: 0.22  # Fraction of hit RMS to calculate cluster fit chisq
#############################################################
physics.producers.linecluster.ClusterCrawlerAlg.AllowNoHitWire: 3 # Allow skipping wires that have no signal
physics.producers.linecluster.ClusterCrawlerAlg.Vertex2DCut: 10 # Chisq cut for making 2D vertices
physics.producers.linecluster.ClusterCrawlerAlg.Vertex2DWireErrCut: 5 # Reject 3D vertices if wire error too large (wires)
physics.producers.linecluster.ClusterCrawlerAlg.Vertex3DCut: 3 # Chisq cut for making 3D vertices

physics.producers.linecluster.ClusterCrawlerAlg.DebugPlane: -1
physics.producers.linecluster.ClusterCrawlerAlg.DebugWire:  0
physics.producers.linecluster.ClusterCrawlerAlg.DebugHit: 0


physics.producers.pmtrack.ClusterModuleLabel: "linecluster"
physics.producers.pmtrack.HitModuleLabel:     "linecluster"
physics.producers.pmtrack.MinSeedSize2ndPass: 3
physics.producers.pmtrack.FlipToBeam: true
physics.producers.pmtrack.RunVertexing: true
