////////////////////////////////////////////////////////////////////////
// Class:       SamuelAnalyzer
// Module Type: analyzer
// File:        SamuelAnalyzer_module.cc
//
// Generated at Mon Jun 22 19:44:19 2015 by Samuel Santana using artmod
// from cetpkgsupport v1_08_06.
////////////////////////////////////////////////////////////////////////

#include "art/Framework/Core/EDAnalyzer.h"
#include "art/Framework/Core/ModuleMacros.h"
#include "art/Framework/Principal/Event.h"
#include "art/Framework/Principal/Handle.h"
#include "art/Framework/Principal/Run.h"
#include "art/Framework/Principal/SubRun.h"
#include "art/Utilities/InputTag.h"
#include "fhiclcpp/ParameterSet.h"
#include "messagefacility/MessageLogger/MessageLogger.h"


namespace lar1nd {
  class SamuelAnalyzer;
}

class lar1nd::SamuelAnalyzer : public art::EDAnalyzer {
public:
  explicit SamuelAnalyzer(fhicl::ParameterSet const & p);
  // The destructor generated by the compiler is fine for classes
  // without bare pointers or other resource use.

  // Plugins should not be copied or assigned.
  SamuelAnalyzer(SamuelAnalyzer const &) = delete;
  SamuelAnalyzer(SamuelAnalyzer &&) = delete;
  SamuelAnalyzer & operator = (SamuelAnalyzer const &) = delete;
  SamuelAnalyzer & operator = (SamuelAnalyzer &&) = delete;

  // Required functions.
  void analyze(art::Event const & e) override;

  // Selected optional functions.
  void beginJob() override;
  void reconfigure(fhicl::ParameterSet const & p) override;

private:

  // Declare member data here.

};


lar1nd::SamuelAnalyzer::SamuelAnalyzer(fhicl::ParameterSet const & p)
  :
  EDAnalyzer(p)  // ,
 // More initializers here.
{}

void lar1nd::SamuelAnalyzer::analyze(art::Event const & e)
{
  // Implementation of required member function here.
}

void lar1nd::SamuelAnalyzer::beginJob()
{
  // Implementation of optional member function here.
}

void lar1nd::SamuelAnalyzer::reconfigure(fhicl::ParameterSet const & p)
{
  // Implementation of optional member function here.
}

DEFINE_ART_MODULE(lar1nd::SamuelAnalyzer)
